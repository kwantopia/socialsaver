# Django settings for bbuy project.
import os
PROJECT_ROOT = os.path.abspath(os.path.dirname(__file__))

# TODO: Need to set this for deployment
DEBUG = True
TEMPLATE_DEBUG = DEBUG

if DEBUG:
    HOST_NAME = "shoppley-dev.mit.edu"
else:
    HOST_NAME = "shoppley.mit.edu"

LOGIN_REDIRECT_URL = "/home/"
LOGOUT_REDIRECT_URL = "/"

if DEBUG:
    FACEBOOK_API_KEY = 'd1b041adc0c9e83daa3e360ecaed7894'
    FACEBOOK_SECRET_KEY = '018c602dca8f94ade86ef179bac1af57'
    GOOGLE_API_KEY = 'ABQIAAAAtw1JH2yMfNAUgmPaNN9VkBTXqmlpQyaPKvxZbuT2cLdlc_k4nRTLX-m3IZGUA-3kAJcA5uFV346zWw'
    NUM_FRIEND_RETRIEVE_LIMIT = 50
else:
    # for final deployment
    FACEBOOK_API_KEY = '97ee16323ae4ce811c9169b3816c65c8'
    FACEBOOK_SECRET_KEY = 'ef503598fee98156e7e5680a11432def'
    GOOGLE_API_KEY = 'ABQIAAAAtw1JH2yMfNAUgmPaNN9VkBRj480WYCXhi91sEfivboEGSXNXgxRdM3tSqQhtXRA6PaPrpvRpobJhXg'
    NUM_FRIEND_RETRIEVE_LIMIT = 500

FACEBOOK_INTERNAL = True
FACEBOOK_CACHE_TIMEOUT = 1800

BESTBUY_API_KEY = 'qf7anjkthgcpgwgcvz4ga4wf'

# Full path to the APN Certificate / Private Key .pem
IPHONE_SANDBOX_APN_PUSH_CERT = os.path.join(PROJECT_ROOT, "keys/shoppleydevcert.pem")
IPHONE_LIVE_APN_PUSH_CERT = os.path.join(PROJECT_ROOT, "keys/shoppleyprodcert.pem")

# Set this to the hostname for the outgoing push server
IPHONE_SANDBOX_APN_HOST = 'gateway.sandbox.push.apple.com'
IPHONE_LIVE_APN_HOST = 'gateway.push.apple.com'

# Set this to the hostname for the feedback server
IPHONE_SANDBOX_FEEDBACK_HOST = 'feedback.sandbox.push.apple.com'
IPHONE_LIVE_FEEDBACK_HOST = 'feedback.push.apple.com'


ADMINS = (
    # ('Your Name', 'your_email@domain.com'),
)

MANAGERS = ADMINS

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2', # Add 'postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': 'Shoppley',                      # Or path to database file if using sqlite3.
        'USER': 'otnpostgres',                      # Not used with sqlite3.
        'PASSWORD': 'aaa',                  # Not used with sqlite3.
        'HOST': '',                      # Set to empty string for localhost. Not used with sqlite3.
        'PORT': '',                      # Set to empty string for default. Not used with sqlite3.
    }
}

# Local time zone for this installation. Choices can be found here:
# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name
# although not all choices may be available on all operating systems.
# On Unix systems, a value of None will cause Django to use the same
# timezone as the operating system.
# If running in a Windows environment this must be set to the same as your
# system time zone.
TIME_ZONE = 'America/Chicago'

# Language code for this installation. All choices can be found here:
# http://www.i18nguy.com/unicode/language-identifiers.html
LANGUAGE_CODE = 'en-us'

SITE_ID = 1

# If you set this to False, Django will make some optimizations so as not
# to load the internationalization machinery.
USE_I18N = True

# Absolute path to the directory that holds media.
# Example: "/home/media/media.lawrence.com/"
MEDIA_ROOT = "%s/static/media/"%PROJECT_ROOT

# URL that handles the media served from MEDIA_ROOT. Make sure to use a
# trailing slash if there is a path component (optional in other cases).
# Examples: "http://media.lawrence.com", "http://example.com/media/"
MEDIA_URL = "http://%s/media/"%HOST_NAME

# URL prefix for admin media -- CSS, JavaScript and images. Make sure to use a
# trailing slash.
# Examples: "http://foo.com/media/", "/media/".
ADMIN_MEDIA_PREFIX = '/media/admin/'

# Make this unique, and don't share it with anybody.
SECRET_KEY = 'y=jihvkp^&yuc24)smw^jtrzu5967r0z5u7am&4=3c_%^0bx_d'

# List of callables that know how to import templates from various sources.
TEMPLATE_LOADERS = (
    'django.template.loaders.filesystem.Loader',
    'django.template.loaders.app_directories.Loader',
#     'django.template.loaders.eggs.Loader',
)

MIDDLEWARE_CLASSES = (
    'django.middleware.cache.UpdateCacheMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'facebook.djangofb.FacebookMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'facebookconnect.middleware.FacebookConnectMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.cache.FetchFromCacheMiddleware',

)

AUTHENTICATION_BACKENDS = (
    'bestbuy.backend.BestBuyBackend',
    'facebookconnect.models.FacebookBackend',
    'django.contrib.auth.backends.ModelBackend',
)

CUSTOM_USER_MODEL = 'bestbuy.Party'

if not DEBUG:
    CACHE_BACKEND = 'memcached://127.0.0.1:11211/'
    # TODO: python manage.py createcachetable [shoppley_cache_table]
    #CACHE_BACKEND = 'db://shoppley_cache_table'
    CACHE_MIDDLEWARE_SECONDS = 1800
    CACHE_MIDDLEWARE_KEY_PREFIX = 'shoppley'


ROOT_URLCONF = 'webuy.urls'

TEMPLATE_DIRS = (
    # Put strings here, like "/home/html/django_templates" or "C:/www/django/templates".
    # Always use forward slashes, even on Windows.
    # Don't forget to use absolute paths, not relative paths.
    PROJECT_ROOT,
)

INSTALLED_APPS = (
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.messages',
    # Uncomment the next line to enable the admin:
    'django.contrib.admin',

    'facebookconnect',
    'web',
    'common',
    'analysis',
    'mobile',
    'survey',
    'bestbuy',
    'iphonepush',
    #'south',
)

DUMMY_FACEBOOK_INFO = {
    'uid': 0,
    'name': '(Private)',
    'first_name': '(Private)',
    'last_name': '(Private)',
    'profile_url': None,
    'pic': 'http://www.facebook.com/pics/t_silhouette.gif',
    'pic_square': 'http://www.facebook.com/pics/t_silhouette.gif',
    'pic_square_with_logo': 'http://www.facebook.com/pics/t_silhouette.gif',
    'pic_big': 'http://www.usgwarchives.net/wi/kewaunee/images/unknown-peterson.jpg',
    'affiliations': None,
    'status': None,
    'proxied_email': None,
}

try:
    LOCAL_DEVELOPMENT = False
    from local_settings import *
    LOCAL_DEVELOPMENT = True 
except ImportError:
    try:
        from mod_python import apache
        apache.log_error('local_settings.py not set; using default settings', apache.APLOG_NOTICE)
    except ImportError:
        import sys
        sys.stderr.write('local_settings.py not set; using default settings\n')

import logging
import logging.config

try:
    logging.config.fileConfig(PROJECT_ROOT+"/logging.conf")
    # create logger
    LOGGER = logging.getLogger("shoppley")
    FB_LOGGER = logging.getLogger("facebookconnect")
except:
    pass


